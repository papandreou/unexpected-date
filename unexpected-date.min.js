/*!
 * The MIT License (MIT)
 * 
 * Copyright (c) 2017 Sushant Dhiman
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.unexpectedDate={})}(this,function(e){"use strict";var t=function(e,t){return e.getUTCFullYear()===t.getUTCFullYear()&&e.getUTCMonth()===t.getUTCMonth()&&e.getUTCDate()===t.getUTCDate()&&e.getTimezoneOffset()===t.getTimezoneOffset()};var n=function(e,t){return e.getTime()===t.getTime()};function o(e,t){return e.getTime()>t.getTime()}var i=o;function r(e,t){return e.getTime()<t.getTime()}var a=r;var u=function(e,t,n){return o(e,t)&&r(e,n)},s={};s.isEqualDate=t,s.isEqualDateTime=n,s.isAfter=i,s.isBefore=a,s.isBetween=u;var d={name:"unexpected-date",installInto:function(e){e.addAssertion("<date> [not] to be after <date>",function(e,t,n){return e(s.isAfter(t,n),"[not] to be true")}),e.addAssertion("<date> [not] to be before <date>",function(e,t,n){return e(s.isBefore(t,n),"[not] to be true")}),e.addAssertion("<date> [not] to equal time <date>",function(e,t,n){return e(s.isEqualDateTime(t,n),"[not] to be true")}),e.addAssertion("<date> [not] to equal date <date>",function(e,t,n){return e(s.isEqualDate(t,n),"[not] to be true")}),e.addAssertion("<date> [not] to be same or after <date>",function(e,t,n){return e(s.isAfter(t,n)||s.isEqualDateTime(t,n),"[not] to be true")}),e.addAssertion("<date> [not] to be close to <date> <number?>",function(e,t,n,o){e.errorMode="bubble","number"!=typeof o&&(o=1e3),e.withError(function(){e(t.getTime(),"[not] to be close to",n.getTime(),o)},function(){e.fail(function(i){i.error("expected ").appendInspected(t).nl().error(e.testDescription).sp().appendInspected(n).sp().text("(epsilon: ").jsNumber(o.toExponential()).text(")")})})}),e.addAssertion("<date> [not] to be same or before <date>",function(e,t,n){return e(s.isBefore(t,n)||s.isEqualDateTime(t,n),"[not] to be true")}),e.addAssertion("<date> [not] to be [inclusively] between <date> <date>",function(e,t,n,o){return e.argsOutput=function(e){e.append(function(e){e.appendInspected(n),e.text(" and "),e.appendInspected(o)})},e(!0===e.flags.inclusively?s.isBetween(t,n,o)||s.isEqualDateTime(t,n)||s.isEqualDateTime(t,o):s.isBetween(t,n,o),"[not] to be true")})}},f=d.name,c=d.installInto;e.default=d,e.name=f,e.installInto=c,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=unexpected-date.min.js.map
